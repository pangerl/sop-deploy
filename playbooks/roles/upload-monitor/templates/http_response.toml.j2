# # collect interval
# interval = 15

{% if dfs_lst|length > 0 %}
[[instances]]
targets = [
{% for ip in dfs_lst %}
     "http://{{ ip }}:8080",
{% endfor %}
]

labels = { product="fastdfs" }
{% endif %}


{% if xxl_lst|length > 0 %}
[[instances]]
targets = [
{% for ip in xxl_lst %}
     "http://{{ ip }}:{{ xxl_port }}/toLogin",
{% endfor %}
]

labels = { product="xxl-job" }
{% endif %}

{% if nacos_lst|length > 0 %}
[[instances]]
targets = [
{% for ip in nacos_lst %}
     "http://{{ ip }}:{{ nacos_port }}/nacos/",
{% endfor %}
]

labels = { product="nacos" }
{% endif %}

{% if doris_fe|length > 0 %}

[[instances]]
targets = [
{% for ip in doris_fe %}
     "http://{{ ip }}:18030/api/health",
{% endfor %}
]

expect_response_substring = "success"

labels = { product="fe" }


[[instances]]
targets = [
{% for ip in doris_be %}
     "http://{{ ip }}:18040/api/health",
{% endfor %}
]

expect_response_substring = "OK"

labels = { product="be" }
{% endif %}


# # interval = global.interval * interval_times
# interval_times = 1

## Set http_proxy (categraf uses the system wide proxy settings if it's is not set)
# http_proxy = "http://localhost:8888"

## Interface to use when dialing an address
# interface = "eth0"

## HTTP Request Method
# method = "GET"

## Set response_timeout (default 5 seconds)
# response_timeout = "5s"

## Whether to follow redirects from the server (defaults to false)
# follow_redirects = false

## Optional HTTP Basic Auth Credentials
# username = "username"
# password = "pa$$word"

## Optional headers
# headers = ["Header-Key-1", "Header-Value-1", "Header-Key-2", "Header-Value-2"]

## Optional HTTP Request Body
# body = '''
# {'fake':'data'}
# '''

## Optional substring match in body of the response (case sensitive)
# expect_response_substring = "ok"

## Optional expected response status code.
# expect_response_status_code = 0

## Optional TLS Config
# use_tls = false
# tls_ca = "/etc/categraf/ca.pem"
# tls_cert = "/etc/categraf/cert.pem"
# tls_key = "/etc/categraf/key.pem"
## Use TLS but skip chain & host verification
# insecure_skip_verify = false
